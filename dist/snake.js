"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_createClass=function(){function o(t,e){for(var i=0;i<e.length;i++){var o=e[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(t,e,i){return e&&o(t.prototype,e),i&&o(t,i),t}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var DIRECTION={UP:"up",RIGHT:"right",DOWN:"down",LEFT:"left"},SnakeGame=function(){function i(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(_classCallCheck(this,i),t.container&&"object"!==_typeof(t.container))throw new Error("Missing game container");var e={canvas:document.querySelector("#bwSnake"),width:400,height:400,box:20,speed:500,bgColor:"#000",snakeColor:"#fff"};this.options=Object.assign({},e,t),this.snake=[{x:8*this.options.box,y:8*this.options.box}],this.ctx=null,this.game=null,this.direction=DIRECTION.DOWN,this.init()}return _createClass(i,[{key:"init",value:function(){document.addEventListener("keydown",this.control.bind(this)),this.drawLevel(),this.game=setInterval(this.drawSnake.bind(this),this.options.speed)}},{key:"control",value:function(t){var e=t.keyCode,i=this.direction;37===e&&i!==DIRECTION.RIGHT?this.direction=DIRECTION.LEFT:39===e&&i!==DIRECTION.LEFT?this.direction=DIRECTION.RIGHT:38===e&&i!==DIRECTION.DOWN?this.direction=DIRECTION.UP:40===e&&i!==DIRECTION.UP&&(this.direction=DIRECTION.DOWN)}},{key:"drawLevel",value:function(){var t=this.options,e=t.width,i=t.height;this.options.canvas.setAttribute("width",e),this.options.canvas.setAttribute("height",i),this.ctx=this.options.canvas.getContext("2d"),this.ctx.fillStyle=this.options.bgColor,this.ctx.fillRect(0,0,e,i)}},{key:"drawSnake",value:function(){var t=this.options,e=t.box,i=t.snakeColor;this.move();for(var o=0;o<this.snake.length;o++)this.ctx.fillStyle=i,this.ctx.fillRect(this.snake[o].x,this.snake[o].y,e,e)}},{key:"move",value:function(){switch(this.direction){case DIRECTION.LEFT:this.snake[0].x-=this.options.box;break;case DIRECTION.RIGHT:this.snake[0].x+=this.options.box;break;case DIRECTION.UP:this.snake[0].y-=this.options.box;break;case DIRECTION.DOWN:this.snake[0].y+=this.options.box}}}]),i}();